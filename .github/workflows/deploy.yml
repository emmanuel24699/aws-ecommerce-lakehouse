name: Deploy Lakehouse Pipeline to AWS

on:
  push:
    branches:
      - main
    paths:
      - "scripts/**"
      - "state_machine/**"

env:
  S3_BUCKET_NAME: lab5-ecommerce-lakehouse # S3 bucket for ETL scripts
  AWS_REGION: us-east-1 # AWS region for deployment

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write # Required for OIDC token
      contents: read # Required for checkout

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.9" # Choose a version compatible with your scripts

      - name: Lint Python scripts
        run: |
          echo "Installing pylint..."
          pip install pylint
          echo "Linting Python scripts in scripts/ directory..."
          pylint scripts/*.py || { echo "Linting failed"; exit 1; }
          # Note: Linting enforces code quality before deployment

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}
          role-session-name: GitHubActionsDeploy

      - name: Check S3 bucket existence
        run: |
          echo "Checking if S3 bucket exists..."
          aws s3 ls s3://${{ env.S3_BUCKET_NAME }} || { echo "Bucket does not exist"; exit 1; }

      - name: Validate State Machine Definition
        run: |
          echo "Validating State Machine definition using AWS CLI..."
          aws stepfunctions validate-state-machine-definition --definition "$(cat state_machine/ecommerce-pipeline.asl.json)" || { echo "Invalid ASL definition"; exit 1; }
          # Note: Uses AWS Step Functions native validation

      - name: Deploy scripts to S3
        run: |
          echo "Syncing ETL scripts to S3 bucket s3://${{ env.S3_BUCKET_NAME }}/scripts/..."
          aws s3 sync ./scripts/ s3://${{ env.S3_BUCKET_NAME }}/scripts/ --delete
          # Note: --delete removes files in S3 not present locally; ensure this is intended

      - name: Deploy Step Functions State Machine
        run: |
          echo "Updating State Machine definition..."
          aws stepfunctions update-state-machine --state-machine-arn ${{ vars.STATE_MACHINE_ARN }} --definition "$(cat state_machine/ecommerce-pipeline.asl.json)"
